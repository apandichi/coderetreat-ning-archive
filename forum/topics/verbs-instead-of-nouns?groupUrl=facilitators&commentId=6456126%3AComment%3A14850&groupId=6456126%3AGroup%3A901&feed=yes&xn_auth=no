<?xml version="1.0" encoding="utf-8"?>
        <feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
            <title>Verbs instead of Nouns - Coderetreat</title>
            <link rel="self" href="http://coderetreat.org/forum/topics/verbs-instead-of-nouns?groupUrl=facilitators&amp;commentId=6456126%3AComment%3A14850&amp;groupId=6456126%3AGroup%3A901&amp;feed=yes&amp;xn_auth=no"/>
            <updated>2017-01-29T12:42:30Z</updated>
                        <id>http://coderetreat.org/forum/topics/verbs-instead-of-nouns?groupUrl=facilitators&amp;commentId=6456126%3AComment%3A14850&amp;groupId=6456126%3AGroup%3A901&amp;feed=yes&amp;xn_auth=no</id>
                            <entry>
                    <title>Thanks for your input. I&#039;ll g…</title>
                    <link rel="alternate" href="http://coderetreat.org/xn/detail/6456126:Comment:14633"/>
                                        <id>tag:coderetreat.org,2012-10-24:6456126:Comment:14633</id>
                                        <updated>2012-10-24T20:08:38.575Z</updated>
                    
                                            <author>
                            <name>Pontus Bergöö</name>
                            <uri>http://coderetreat.org/profile/PontusBergoeoe</uri>
                        </author>
                    
                    <summary type="html">
                        &lt;p&gt;Thanks for your input. I&#039;ll go back to the drawing board to find my solution.&lt;br&gt;&lt;/br&gt; &lt;br&gt;&lt;/br&gt; &lt;cite&gt;Alexander Marek said:&lt;/cite&gt;&lt;/p&gt;
&lt;blockquote cite=&quot;http://coderetreat.org/forum/topics/verbs-instead-of-nouns?groupUrl=facilitators&amp;amp;#6456126Comment14850&quot;&gt;&lt;div&gt;&lt;div class=&quot;xg_user_generated&quot;&gt;&lt;p&gt;Hi!&lt;/p&gt;
&lt;p&gt;I am not a Scala guru at all nor a functional programming hero. So I might have rather the object oriented view on this subject.&lt;/p&gt;
&lt;p&gt;But for me &quot;Verbs instead of Nouns&quot; has a very clear…&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;                    </summary>

                                            <content type="html">
                            &lt;p&gt;Thanks for your input. I&#039;ll go back to the drawing board to find my solution.&lt;br/&gt; &lt;br/&gt; &lt;cite&gt;Alexander Marek said:&lt;/cite&gt;&lt;/p&gt;
&lt;blockquote cite=&quot;http://coderetreat.org/forum/topics/verbs-instead-of-nouns?groupUrl=facilitators&amp;amp;#6456126Comment14850&quot;&gt;&lt;div&gt;&lt;div class=&quot;xg_user_generated&quot;&gt;&lt;p&gt;Hi!&lt;/p&gt;
&lt;p&gt;I am not a Scala guru at all nor a functional programming hero. So I might have rather the object oriented view on this subject.&lt;/p&gt;
&lt;p&gt;But for me &quot;Verbs instead of Nouns&quot; has a very clear learning target, which is that when you write code and you introduce a new class you mustn&#039;t think about what that class IS (or what it represents), but what it DOES. Having this mindset in my everyday work helps me keeping the separation of concerns and keeping the classes small and simple.&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;As an example, all the attendees of my code retreats had some form of a &quot;Game&quot; class which is obviously a noun based approach. And when you think about a game, you can easily list &lt;strong&gt;several&lt;/strong&gt; things that a game does and contains:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A game calculates the next step/game round&lt;/li&gt;
&lt;li&gt;a game knows the rules of the game&lt;/li&gt;
&lt;li&gt;a contains all the cells and their state&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;so finally you end up with a big monolythic bunch of code in a single class.&lt;/p&gt;
&lt;p&gt;If you think about what a class &lt;strong&gt;does&lt;/strong&gt;, you end up with something like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A GenerationCalculator class that is only responsible for calculating the next generation&lt;/li&gt;
&lt;li&gt;several RuleExecutor classes, each responsible for a single GOL rule. They are used by the GenerationCalculator to calculate the next generation&lt;/li&gt;
&lt;li&gt;A GameBoard class (&lt;strong&gt;noun!!&lt;/strong&gt;) that contains the cells&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As you see you cannot get away with verbs only, because at a certain point, you need to store data. But in the described case, the data class (GameBoard) has no logic at all - it&#039;s therefore a &quot;perfect noun&quot;. (I just introduced that neologism ;-))&lt;/p&gt;
&lt;p&gt;I hope that helped you!&lt;/p&gt;
&lt;p&gt;Have fun retreating! ;-)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;                        </content>
                    
                                    </entry>
                            <entry>
                    <title>Hi!
I am not a Scala guru at…</title>
                    <link rel="alternate" href="http://coderetreat.org/xn/detail/6456126:Comment:14850"/>
                                        <id>tag:coderetreat.org,2012-10-24:6456126:Comment:14850</id>
                                        <updated>2012-10-24T08:19:42.666Z</updated>
                    
                                            <author>
                            <name>Alexander Marek</name>
                            <uri>http://coderetreat.org/profile/AlexanderMarek</uri>
                        </author>
                    
                    <summary type="html">
                        &lt;p&gt;Hi!&lt;/p&gt;
&lt;p&gt;I am not a Scala guru at all nor a functional programming hero. So I might have rather the object oriented view on this subject.&lt;/p&gt;
&lt;p&gt;But for me &quot;Verbs instead of Nouns&quot; has a very clear learning target, which is that when you write code and you introduce a new class you mustn&#039;t think about what that class IS (or what it represents), but what it DOES. Having this mindset in my everyday work helps me keeping the separation of concerns and keeping the classes small and…&lt;/p&gt;                    </summary>

                                            <content type="html">
                            &lt;p&gt;Hi!&lt;/p&gt;
&lt;p&gt;I am not a Scala guru at all nor a functional programming hero. So I might have rather the object oriented view on this subject.&lt;/p&gt;
&lt;p&gt;But for me &quot;Verbs instead of Nouns&quot; has a very clear learning target, which is that when you write code and you introduce a new class you mustn&#039;t think about what that class IS (or what it represents), but what it DOES. Having this mindset in my everyday work helps me keeping the separation of concerns and keeping the classes small and simple.&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;As an example, all the attendees of my code retreats had some form of a &quot;Game&quot; class which is obviously a noun based approach. And when you think about a game, you can easily list &lt;strong&gt;several&lt;/strong&gt; things that a game does and contains:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A game calculates the next step/game round&lt;/li&gt;
&lt;li&gt;a game knows the rules of the game&lt;/li&gt;
&lt;li&gt;a contains all the cells and their state&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;so finally you end up with a big monolythic bunch of code in a single class.&lt;/p&gt;
&lt;p&gt;If you think about what a class &lt;strong&gt;does&lt;/strong&gt;, you end up with something like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A GenerationCalculator class that is only responsible for calculating the next generation&lt;/li&gt;
&lt;li&gt;several RuleExecutor classes, each responsible for a single GOL rule. They are used by the GenerationCalculator to calculate the next generation&lt;/li&gt;
&lt;li&gt;A GameBoard class (&lt;strong&gt;noun!!&lt;/strong&gt;) that contains the cells&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As you see you cannot get away with verbs only, because at a certain point, you need to store data. But in the described case, the data class (GameBoard) has no logic at all - it&#039;s therefore a &quot;perfect noun&quot;. (I just introduced that neologism ;-))&lt;/p&gt;
&lt;p&gt;I hope that helped you!&lt;/p&gt;
&lt;p&gt;Have fun retreating! ;-)&lt;/p&gt;                        </content>
                    
                                    </entry>
                            <entry>
                    <title>Yes, that is perhaps an appro…</title>
                    <link rel="alternate" href="http://coderetreat.org/xn/detail/6456126:Comment:14538"/>
                                        <id>tag:coderetreat.org,2012-10-23:6456126:Comment:14538</id>
                                        <updated>2012-10-23T21:01:41.515Z</updated>
                    
                                            <author>
                            <name>Pontus Bergöö</name>
                            <uri>http://coderetreat.org/profile/PontusBergoeoe</uri>
                        </author>
                    
                    <summary type="html">
                        &lt;p&gt;Yes, that is perhaps an approach to take. Me and my group maybe was a little to rigid about the rule and interpreted it like no nouns are allowed what so ever. And that was very difficult. I see the words cell, neighbour, generation. &lt;/p&gt;
&lt;p&gt;I&#039;m kind of a beginner to use functional languages like Scala. I have this hope that in the functional world it should be more natural to use verbs but it is very tempting to name the things you apply the verbs on with nouns. &lt;/p&gt;
&lt;p&gt;It is a really…&lt;/p&gt;                    </summary>

                                            <content type="html">
                            &lt;p&gt;Yes, that is perhaps an approach to take. Me and my group maybe was a little to rigid about the rule and interpreted it like no nouns are allowed what so ever. And that was very difficult. I see the words cell, neighbour, generation. &lt;/p&gt;
&lt;p&gt;I&#039;m kind of a beginner to use functional languages like Scala. I have this hope that in the functional world it should be more natural to use verbs but it is very tempting to name the things you apply the verbs on with nouns. &lt;/p&gt;
&lt;p&gt;It is a really challenge. &lt;/p&gt;
&lt;p&gt;&lt;br/&gt; &lt;cite&gt;Marco Emrich said:&lt;/cite&gt;&lt;/p&gt;
&lt;blockquote cite=&quot;http://coderetreat.org/forum/topics/verbs-instead-of-nouns?groupUrl=facilitators&amp;amp;#6456126Comment14824&quot;&gt;&lt;div&gt;&lt;div class=&quot;xg_user_generated&quot;&gt;&lt;p&gt;Hi Pontus,&lt;/p&gt;
&lt;p&gt;I don&#039;t have a perfect answer on that - but I can tell you what we did, when we got introduced to this constraint.&lt;/p&gt;
&lt;p&gt;Our idea was to separate value objects (like cell, board etc.) from operations, and to build service objects for doing the operational stuff. So we ended up with classes like &quot;BuildNextGeneration&quot;, &quot;KillCell&quot;, &quot;ProcessCell&quot;, &quot;FindNeightbours&quot;, and so on. They provided methods to operate on the data objects, like KillCell.apply(aCell) in the simplest case.&lt;/p&gt;
&lt;p&gt;I&#039;m still not sure, if this is, how, the &quot;Verb&quot;-constraint was actually meant. &lt;/p&gt;
&lt;p&gt;Marco &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;                        </content>
                    
                                    </entry>
                            <entry>
                    <title>Hi Pontus,
I don&#039;t have a per…</title>
                    <link rel="alternate" href="http://coderetreat.org/xn/detail/6456126:Comment:14824"/>
                                        <id>tag:coderetreat.org,2012-10-23:6456126:Comment:14824</id>
                                        <updated>2012-10-23T13:55:52.764Z</updated>
                    
                                            <author>
                            <name>Marco Emrich</name>
                            <uri>http://coderetreat.org/profile/MarcoEmrich</uri>
                        </author>
                    
                    <summary type="html">
                        &lt;p&gt;Hi Pontus,&lt;/p&gt;
&lt;p&gt;I don&#039;t have a perfect answer on that - but I can tell you what we did, when we got introduced to this constraint.&lt;/p&gt;
&lt;p&gt;Our idea was to separate value objects (like cell, board etc.) from operations, and to build service objects for doing the operational stuff. So we ended up with classes like &quot;BuildNextGeneration&quot;, &quot;KillCell&quot;, &quot;ProcessCell&quot;, &quot;FindNeightbours&quot;, and so on. They provided methods to operate on the data objects, like KillCell.apply(aCell) in the simplest…&lt;/p&gt;                    </summary>

                                            <content type="html">
                            &lt;p&gt;Hi Pontus,&lt;/p&gt;
&lt;p&gt;I don&#039;t have a perfect answer on that - but I can tell you what we did, when we got introduced to this constraint.&lt;/p&gt;
&lt;p&gt;Our idea was to separate value objects (like cell, board etc.) from operations, and to build service objects for doing the operational stuff. So we ended up with classes like &quot;BuildNextGeneration&quot;, &quot;KillCell&quot;, &quot;ProcessCell&quot;, &quot;FindNeightbours&quot;, and so on. They provided methods to operate on the data objects, like KillCell.apply(aCell) in the simplest case.&lt;/p&gt;
&lt;p&gt;I&#039;m still not sure, if this is, how, the &quot;Verb&quot;-constraint was actually meant. &lt;/p&gt;
&lt;p&gt;Marco &lt;/p&gt;                        </content>
                    
                                    </entry>
                    </feed>
        